<%= simple_form_for(@meal_record) do |f| %>

  <% if @meal_record.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@meal_record.errors.count, "error") %> prohibited this meal_record from being saved:</h2>

      <ul>
      <% @meal_record.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <% if @meal_record.photo.present? %>
      <%= image_tag @meal_record.photo.url(:medium) %>
    <% end %>
    <% unless params[:easy_mode] %>
      <%= f.input :photo %>
    <% end %>
  </div>

  <% if params[:easy_mode] %>

    <input type="hidden" name="easy_mode" value="1">

    <div class="field">
        <%= f.label :hashtags %>
        <%= @meal_record.title || "No hastags added" %>
    </div>

  <% else %>

    <%= f.input :title %>

  <% end %>

  <%= f.input :size, collection: MealRecord::SIZES.each_with_index.map{|size, index| [size, index + 1]} %>

  <%= f.input :carbs_estimate, collection: MealRecord::CARBS_ESTIMATE.each_with_index.map{|size, index| [size, index + 1]} %>


  <div class="field">
      <%= f.label :user %>
      <%= link_to @meal_record.user.username, user_url(@meal_record.user) if @meal_record.user %>
      <%= "No user" unless @meal_record.user %>
  </div>

  <div class="form-group select optional meal_record_fat_secret_ingredients">
    <% if @meal_record.photo.present? %>
      <%= image_tag @meal_record.photo.url(:original), class: "hidden img-responsive" %>
    <% end %>

    <label class="select optional control-label">Ingredients</label>
    <div class="food-picker" id="foodPicker">
      <input type="text" placeholder="Type to search on FatSecret..." class="input-autocomplete">
      <br>
      <ul class="food-picker-foods">
      </ul>
    </div>
  </div>

  <div class="actions">
    <%= f.button :submit, :class => "btn btn-large btn-primary" %>
  </div>
<% end %>

<style media="screen">
  body{
    padding: 10px;
  }

</style>


<script type="text/javascript">
  var pickedFood = [];

  pickedFood = <%= (@meal_record.meal_record_ingredients.map do |i|
    ingredient = i.ingredient

    {
      "value" => ingredient.name,
      "data" => {
        "foodId" => ingredient.fat_secret_food_id,
        "percentageInMealRecord" => i.percentage_in_meal_record
      }
    }
  end).to_json.html_safe %>;

  var reloadList = function reloadListFn() {
    elm = $("#foodPicker");
    list = elm.find(".food-picker-foods");
    list.find("li").remove();

    var estimatedPercentage = 100 / pickedFood.length << 0;

    $.each(pickedFood, function (index) {
      var suggested_food = this;

      if(!suggested_food.data.percentageInMealRecord)
        suggested_food.data.percentageInMealRecord = estimatedPercentage;

      list.append(
          "<li>"
        + suggested_food.value
        + "<input type='hidden' name='meal_record[fat_secret_ingredients][][food_id]' value='" + suggested_food.data.foodId + "'>"
        + "<input type='number' name='meal_record[fat_secret_ingredients][][percentage_in_meal_record]' value='" + suggested_food.data.percentageInMealRecord + "' min=0 max=100>"
        + "<span href='#' class='btn btn-default pull-right' onclick='pickedFood.splice(" + index + ", 1); reloadList();'>&times;</span>"
        + "</li>"
      )
    })
  }

  $("#foodPicker input").focus(function (event) {
    $(".meal_record_fat_secret_ingredients").addClass("focus");
    $("body").addClass("freeze");
  })

  $("#foodPicker input").blur(function (event) {
    $(".meal_record_fat_secret_ingredients").removeClass("focus");
    $("body").removeClass("freeze");
  })

  $(".input-autocomplete").autocomplete({
    serviceUrl: "/api/v1/fat_secret/foods",
    deferRequestBy: 300,
    transformResult: function foodPickerTransformResultFn(response) {
      response = JSON.parse(response);
      return {
          suggestions: $.map(response.foods.food, function(food) {
              return {
                value: food.food_name,
                data: {foodId: food.food_id}
              };
          })
      };
    },
    onSelect: function foodPickerOnSelectFn(suggestion) {
      var found = $.inArray(suggestion, pickedFood, 0) > -1;
      if(!found){
        pickedFood.push(suggestion);
        reloadList();
      }

      $(this).val("");
      $(this).focus();
    }
  })

  reloadList()
</script>
