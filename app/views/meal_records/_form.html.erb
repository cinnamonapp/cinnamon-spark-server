<%= simple_form_for(@meal_record) do |f| %>

  <% if @meal_record.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@meal_record.errors.count, "error") %> prohibited this meal_record from being saved:</h2>

      <ul>
      <% @meal_record.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <% if params[:easy_mode] %>
    <input type="hidden" name="easy_mode" value="1">
  <% end %>

  <!-- The container for this form -->
  <div class="row">
    <div class="col-sm-5">
      <% if @meal_record.photo.present? %>
        <%= image_tag @meal_record.photo.url(:large), class: "img-responsive" %>
      <% end %>
      <br>

      <%= f.input :title %>

      <div class="form-group">
          <%= f.label :user %>
          <br>
          <%= link_to((@meal_record.user.username || "Anonymous"), user_url(@meal_record.user), class: 'string optional form-control', disabled: true) if @meal_record.user %>
          <% unless @meal_record.user %>
            <div class="string optional form-control" disabled>
              No user
            </div>
          <% end %>
      </div>

      <% unless params[:easy_mode] %>
        <%= f.input :photo %>
        <div class="form-inline clearfix">
          <%= f.input :created_at %>
        </div>
        <br>
        <%= f.input :carbs_estimate, collection: MealRecord::CARBS_ESTIMATE.each_with_index.map{|size, index| [size, index + 1]} %>
      <% end %>
    </div>


    <div class="col-sm-7">
      <!-- <div class="spoiler">
        <div class="spoiler-message">
          <span class="spoiler-custom-message">Compressed.</span><br><a href="javascript:$('.spoiler').removeClass('hide-content');">Press to expand.</a>
        </div>
        <%= f.input :title %>
        <%= f.input :size, collection: MealRecord::SIZES.each_with_index.map{|size, index| [size, index + 1]} %>
        <%= f.input :serving, collection: MealRecord::SERVINGS.each_with_index.map{|serving, index| [serving, index + 1]} %>
      </div> -->

      <% unless @meal_record.forced_carbs_estimate_grams.present? %>
        <span class="label label-<%= (@meal_record.created_at > DateTime.now - 60.minutes) ? 'warning' : 'danger' %> pull-right">Waiting since <%= time_ago_in_words(@meal_record.created_at)%></span>
      <% end %>
      <%= f.input :forced_carbs_estimate_grams, placeholder: "Guess the grams of carbohydrates in this dish", label: "Carbs estimate in grams" %>

      <div class="form-group select optional meal_record_fat_secret_ingredients" >
        <label class="select optional control-label">Ingredients</label>
        <small class="pull-right">Try to recognise ingredients in this dish <i class="hidden-xs">(ex. 'Apples', 'Eggs')</i></small>
        <div class="food-picker" id="foodPicker">
          <input type="text" placeholder="Type to search in ingredients database..." class="input-autocomplete">
          <ul class="food-picker-foods no-margin">
          </ul>
        </div>
      </div>

      <hr>

      <div class="actions text-right">
        <label style="margin-right: 10px;"><input type="checkbox" name="notify_user" value="1" <%= "checked" unless @meal_record.forced_carbs_estimate_grams.present? %>> Notify user</label>
        <%= f.button :submit, value: (params[:auto_selected].present?) ? "Update & Next" : "Update dish", :class => "btn btn-large btn-primary" %>
      </div>
    </div>
  </div>

  <hr>

<% end %>

<style media="screen">
  body{
    padding: 10px;
  }

</style>


<script type="text/javascript">
  var pickedFood = [];

  pickedFood = <%= (@meal_record.meal_record_ingredients.map do |i|
    ingredient = i.ingredient

    {
      "value" => ingredient.name,
      "data" => {
        "foodId" => ingredient.fat_secret_food_id,
        "percentageInMealRecord" => i.percentage_in_meal_record
      }
    }
  end).to_json.html_safe %>;

  var reloadList = function reloadListFn() {
    elm = $("#foodPicker");
    list = elm.find(".food-picker-foods");
    list.find("li").remove();

    var estimatedPercentage = 100 / pickedFood.length << 0;

    $.each(pickedFood, function (index) {
      var suggested_food = this;

      if(!suggested_food.data.percentageInMealRecord)
        suggested_food.data.percentageInMealRecord = estimatedPercentage;

      if(suggested_food.data.carbsPerServings === undefined){
        suggested_food.data.carbsPerServings = []
      }

      servings = ""

      $.each(suggested_food.data.carbsPerServings, function (index, serving) {
        servings += "<li style='padding: 2px;font-size:10px;border:none;border-top:1px solid #eee;border-radius:0;'>"
                    + "<b>" + serving.serving_description + ":</b>"
                    + "<span class='pull-right'>" + serving.carbohydrate + "g of carbs" + "</span>"
                  + "</li>"
      })

      list.append(
          "<li>"
        + "<div class='row'>"
          + "<div class='col-xs-8'>"
            + "<h5 class='list-group-item-heading' style='margin-top: 7px;'>" + suggested_food.value + "</h5>"
          + "</div>"
          + "<div class='col-xs-2' style='padding:0; text-align: right;'>"
            + "<input type='hidden' name='meal_record[fat_secret_ingredients][][food_id]' value='" + suggested_food.data.foodId + "'>"
            + "<input type='number' class='meal_record_fat_secret_ingredients_percentage' name='meal_record[fat_secret_ingredients][][percentage_in_meal_record]' value='" + suggested_food.data.percentageInMealRecord + "' class='form-control input-sm' min=0 max=100>"
          + "</div>"
          + "<div class='col-xs-2' style='padding-left:0; text-align: right;'>"
            + "<span href='#' class='btn btn-default btn-sm' onclick='pickedFood.splice(" + index + ", 1); reloadList();'>&times;</span>"
          + "</div>"
        + "</div>"
        + "<div class='list-group-item-text'>"
          + "<ul style='padding:0px;margin-top:10px;margin-bottom:10px;'>"
            + servings
          + "</ul>"
        + "</div>"
        + "</li>"
      )
    })
  }

  var hideSpoilerContent = function () {
    $(".spoiler").addClass("hide-content");

    var title = ($("#meal_record_title").val() == "") ? "No hashtags" : $("#meal_record_title").val()

    $(".spoiler-custom-message").html(
      "Title: <b>" + title + "</b>" +
      " - Size: <b>" + $("#meal_record_size>option:selected").text() + "</b>" +
      " - Serving: <b>" + $("#meal_record_serving>option:selected").text() + "</b>"
    );
  }

  $("#foodPicker input").focus(function (event) {
    hideSpoilerContent();
  })

  $("#foodPicker input").blur(function (event) {
    // $(".spoiler").removeClass("hidden");
  })

  <% if params[:easy_mode].present? %>
    hideSpoilerContent();
  <% end %>

  $(".input-autocomplete").autocomplete({
    serviceUrl: "/api/v1/fat_secret/foods",
    deferRequestBy: 300,
    triggerSelectOnValidInput: false,
    transformResult: function foodPickerTransformResultFn(response) {
      response = JSON.parse(response);
      return {
          suggestions: $.map(response.foods.food, function(food) {
              return {
                value: food.food_name,
                data: {foodId: food.food_id}
              };
          })
      };
    },
    onSelect: function foodPickerOnSelectFn(suggestion) {
      var found = $.inArray(suggestion, pickedFood, 0) > -1;
      if(!found){

        pickedFood.push(suggestion);

        // Query to know if there are carbs per cup
        $.get("/api/v1/fat_secret/foods/" + suggestion.data.foodId + "/carbs_per_servings").success(function (response) {
          suggestion.data.carbsPerServings = response.food.servings;
          reloadList();
        })

        reloadList();
      }

      $(this).val("");
      $(this).focus();
    }
  })

  reloadList()

  $("#edit_meal_record_695").submit(function (event) {
    var percentages = $(".meal_record_fat_secret_ingredients_percentage").map(function () {
      return $(this).val();
    })


  })
</script>
