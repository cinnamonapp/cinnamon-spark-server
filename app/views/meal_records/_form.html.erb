<%= simple_form_for(@meal_record) do |f| %>

  <% if @meal_record.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@meal_record.errors.count, "error") %> prohibited this meal_record from being saved:</h2>

      <ul>
      <% @meal_record.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <% if params[:easy_mode] %>
    <input type="hidden" name="easy_mode" value="1">
  <% end %>

  <!-- The container for this form -->
  <div class="row">
    <div class="col-sm-5">
      <% if @meal_record.photo.present? %>
        <%= image_tag @meal_record.photo.url(:original), class: "img-responsive" %>
      <% end %>
      <br>
      <% unless params[:easy_mode] %>
        <%= f.input :photo %>
      <% end %>
    </div>


    <div class="col-sm-7">
      <div class="spoiler">
        <div class="spoiler-message">
          Compressed. <a href="javascript:$('.spoiler').removeClass('hide-content');">Press to expand.</a>
        </div>
        <%= f.input :title %>

        <%= f.input :carbs_estimate, collection: MealRecord::CARBS_ESTIMATE.each_with_index.map{|size, index| [size, index + 1]} %>

        <div class="form-group">
            <%= f.label :user %>
            <%= link_to @meal_record.user.username, user_url(@meal_record.user) if @meal_record.user %>
            <%= "No user" unless @meal_record.user %>
        </div>
      </div>

      <%= f.input :size, collection: MealRecord::SIZES.each_with_index.map{|size, index| [size, index + 1]} %>

      <div class="form-group select optional meal_record_fat_secret_ingredients">
        <label class="select optional control-label">Ingredients</label>
        <div class="food-picker" id="foodPicker">
          <input type="text" placeholder="Type to search on FatSecret..." class="input-autocomplete">
          <br>
          <ul class="food-picker-foods">
          </ul>
        </div>
      </div>


    </div>
  </div>

  <hr>

  <div class="actions">
    <%= f.button :submit, :class => "btn btn-large btn-primary" %>
    <label><input type="checkbox" name="notify_user" value="1" checked> Notify user</label>
  </div>
<% end %>

<style media="screen">
  body{
    padding: 10px;
  }

</style>


<script type="text/javascript">
  var pickedFood = [];

  pickedFood = <%= (@meal_record.meal_record_ingredients.map do |i|
    ingredient = i.ingredient

    {
      "value" => ingredient.name,
      "data" => {
        "foodId" => ingredient.fat_secret_food_id,
        "percentageInMealRecord" => i.percentage_in_meal_record,
        "carbsPerCup" => ingredient.carbs_per_cup
      }
    }
  end).to_json.html_safe %>;

  var reloadList = function reloadListFn() {
    elm = $("#foodPicker");
    list = elm.find(".food-picker-foods");
    list.find("li").remove();

    var estimatedPercentage = 100 / pickedFood.length << 0;

    $.each(pickedFood, function (index) {
      var suggested_food = this;

      if(!suggested_food.data.percentageInMealRecord)
        suggested_food.data.percentageInMealRecord = estimatedPercentage;

      if(suggested_food.data.carbsPerCup === undefined){
        suggested_food.data.carbsPerCup = "Fetching"
      }

      list.append(
          "<li>"
        + "<div class='row'>"
          + "<div class='col-xs-8'>"
            + "<h5 class='list-group-item-heading'>" + suggested_food.value + "</h5>"
            + "<p class='list-group-item-text'>"
              + "<span class='label label-" + ((suggested_food.data.carbsPerCup === null) ? "danger" : "default") + "'>"
                + ((suggested_food.data.carbsPerCup === null) ? "No carbs per cup" : (suggested_food.data.carbsPerCup + " carbs per cup (g)"))
              + "</span>"
            + "</p>"
          + "</div>"
          + "<div class='col-xs-2' style='padding:0; text-align: right;'>"
            + "<input type='hidden' name='meal_record[fat_secret_ingredients][][food_id]' value='" + suggested_food.data.foodId + "'>"
            + "<input type='number' name='meal_record[fat_secret_ingredients][][percentage_in_meal_record]' value='" + suggested_food.data.percentageInMealRecord + "' class='form-control input-sm' min=0 max=100>"
          + "</div>"
          + "<div class='col-xs-2' style='padding-left:0; text-align: right;'>"
            + "<span href='#' class='btn btn-default btn-sm' onclick='pickedFood.splice(" + index + ", 1); reloadList();'>&times;</span>"
          + "</div>"
        + "</div>"
        + "</li>"
      )
    })
  }

  $("#foodPicker input").focus(function (event) {
    $(".spoiler").addClass("hide-content");
  })

  $("#foodPicker input").blur(function (event) {
    // $(".spoiler").removeClass("hidden");
  })

  $(".input-autocomplete").autocomplete({
    serviceUrl: "/api/v1/fat_secret/foods",
    deferRequestBy: 300,
    triggerSelectOnValidInput: false,
    transformResult: function foodPickerTransformResultFn(response) {
      response = JSON.parse(response);
      return {
          suggestions: $.map(response.foods.food, function(food) {
              return {
                value: food.food_name,
                data: {foodId: food.food_id}
              };
          })
      };
    },
    onSelect: function foodPickerOnSelectFn(suggestion) {
      var found = $.inArray(suggestion, pickedFood, 0) > -1;
      if(!found){

        pickedFood.push(suggestion);

        // Query to know if there are carbs per cup
        $.get("/api/v1/fat_secret/foods/" + suggestion.data.foodId + "/carbs_per_cup").success(function (response) {
          suggestion.data.carbsPerCup = response.food.carbohydrate;
          reloadList();
        })

        reloadList();
      }

      $(this).val("");
      $(this).focus();
    }
  })

  reloadList()
</script>
